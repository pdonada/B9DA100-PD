x
#The education variable is a factor, but it is not ordered. Convert it into a sensibly ordered factor (primary education is ‘less than’ secondary education which is ‘less than’ post-secondary education)
head(Chile2)
x <- factor(Chile2, levels = c('P', 'S', 'PS'), ordered = TRUE)
x
x <- factor(Chile2$education, levels = c('P', 'S', 'PS'), ordered = TRUE)
x
Chile2$education <- factor(Chile2$education, levels = c('P', 'S', 'PS'), ordered = TRUE)
#The education variable is a factor, but it is not ordered. Convert it into a sensibly ordered factor (primary education is ‘less than’ secondary education which is ‘less than’ post-secondary education)
head(Chile2)
str(Chile2)
final.obj <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')])
final.obj <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')],
FUN = mean)
final.obj
max(final.obj)
max(final.obj$income)
final_quest <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')],
FUN = mean)
final_quest[which.max(final_quest$income), 'size']
final_quest
highst_mean <- final_quest[which.max(final_quest$income), 'size']
highst_mean
highst_mean
final_quest <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')],
FUN = mean)
highst_mean <- final_quest[which.max(final_quest$income), 'size']
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'income']
highst_mean
final_quest
highst_mean
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'sex']
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'sex', 'vote']
highst_mean
final_quest <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')],
FUN = mean)
highst_mean <- final_quest[which.max(final_quest$income), 'sex', 'vote']
highst_mean <- final_quest[which.max(final_quest$income), ]
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'sex'&'vote']
highst_mean <- final_quest[which.max(final_quest$income), 'sex']
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'sex']
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), 'income']
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), c('income','sex')]
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), c('sex','vote')]
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), c('sex','vote', 'income')]
highst_mean
highst_mean <- final_quest[which.max(final_quest$income), c('sex','vote')]
highst_mean
final_quest <- aggregate(Chile2[ c('income', 'age')],
by = Chile2[c('sex', 'vote')],
FUN = mean)
final_quest
mean_age <- final_quest[which.max(final_quest$income), 'age']
mean_age
install.packages('MASS')
install.packages("MASS")
library(MASS)
data('Cars93')
head(Cars93)
str(Cars93)
?Cars93
#
#b. Produce a histogram of the Price variable, and make the graph look neat and presentable (paying particular attention to labels, colours, titles etc.). Comment on the resulting graph.
hist(Cars93$Price)
head(Cars93)
head(Cars93)
?Cars93
hist(Cars93$Price, breaks = 10,
xlab = "Temperature (in Fahrenheit)",
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
hist(Cars93$Price, breaks = 10,
xlab = "Price Analysis",
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
hist(Cars93$Price, breaks = 10,
xlab = "Quantity of Cars",
ylab = 'Price'
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
hist(Cars93$Price, breaks = 10,
xlab = "Quantity of Cars",
ylab = 'Price',
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
hist(Cars93$Price, breaks = 5,
xlab = "Quantity of Cars",
ylab = 'Price',
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
min(Cars93$Price)
#b. Produce a histogram of the Price variable, and make the graph look neat and presentable (paying particular attention to labels, colours, titles etc.). Comment on the resulting graph.
hist(Cars93$Price)
hist(Cars93$Price, breaks = 5,
xlab = "Quantity of Cars",
ylab = 'Price',
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
Cars93
Cars93$Price
hist(Cars93$Price, breaks = 5,
xlab = "Price",
ylab = 'Number of Cars',
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
hist(Cars93$Price,
xlab = "Price",
ylab = 'Number of Cars',
main = "Data from 93 Cars on Sale in the USA in 1993",
col = 'plum2',
labels = TRUE)
?scatterplot
library(car)
#Use the type='n' argument (or otherwise) to help you to create a scatterplot of the Length variable against the Price variable where there are three distinct groups in the plot, depending on the DriveTrain type of the cars.
install.packages('car')
library(car)
scatterplot( Length ~ Price, data = Cars93,
xlab='x label', ylab='y label',
main='main label')
head(Cars93)
scatterplot( Length ~ Price, data = Cars93,
xlab='x label', ylab='y label',
main='main label'
labels = row.names(Cars93))
scatterplot( Length ~ Price, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
labels = row.names(Cars93))
scatterplot( Length ~ Price, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
labels = Cars93$Manufacturer)
scatterplot( Length ~ Price, data = Cars93,
xlab='x label', ylab='y label',
main='main label')
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label')
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1)
# The code below is used to take a matrix of numeric data, find the rows in this matrix which have at least one positive number, and then return the index of these rows.
#
# (To save you time, you can find the code in the file Q3.R contained in the Exam folder.)
#
fun1 <- function(mat) {
out <- NULL
for(i in 1:nrow(mat)) {
if(any(mat[i,] > 0)) {
out <- c(out, i)
}
}
return(out)
}
set.seed(13) my.mat <- matrix(rnorm(20), 10, 2)
set.seed(13)
my.mat <- matrix(rnorm(20), 10, 2)
my.mat
res1 <- fun1(my.mat)
res1
my.mat
res1 <- fun1(my.mat)
res1
my.mat
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend('bottomleft'))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend('bottomleft', legend = DriveTrain))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1)
legend("bottomleft")
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend("bottomleft"))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend("bottomleft"), DriveTrain)
legend("bottomleft", DriveTrain)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend("bottomleft", DriveTrain))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend("bottomleft", legend = DriveTrain))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend("bottomleft", legend = ''))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend(x=-3,y=7,DriveTrain,cex=.8,col=c("red","blue",'yellow'),pch=c(1,2)))
legend(1, 7, legend = c("4WD", "Front", 'Rear'),
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend(1, 7, legend = c("4WD", "Front", 'Rear'),
pch = c(19, 1), lty = c(1, 4), col = "red"))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend('bottomleft', legend = c("4WD", "Front", 'Rear'),
pch = c(19, 1), lty = c(1, 4), col = "red"))
pch = c(19, 1), col = c("red", 'blue', 'yellow'))
col = c("red", 'blue', 'yellow'))
legend('bottomleft', legend = c("4WD", "Front", 'Rear'),
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1,
legend('bottomleft', legend = c("4WD", "Front", 'Rear'),
col = c("red", 'blue', 'yellow')
))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label',
las = 1)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1, legend=FALSE)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend=TRUE, 'bottomleft')
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend=TRUE)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
(legend=TRUE, 'bottomleft'))
legend(1, 7, legend = c("A", "B", 'C'),
pch = c(19, -1), lty = c(-1, 4), col = "red")
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
legend(1, 7, legend = c("A", "B", 'C'),
pch = c(19, -1), lty = c(-1, 4), col = "red")
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
legend('bottom', legend = c("A", "B", 'C'),
pch = c(19, -1), lty = c(-1, 4), col = "red")
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = c(-1, 4), col = "red")
c(19, -1)
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = c(19, -1), lty = c(-1, 4), col = "red")
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = c(-1, 4), col = "red")
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, col = "red")
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, col = mycols)
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, col = 'red', 'blue', 'yellow')
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, col = c('red', 'blue', 'yellow'))
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, col = c('red', 'blue', 'green'))
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, bty = "n", col = c('red', 'blue', 'green'))
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, bty = "n", col = c('red', 'blue', 'green'))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, bty = "n", col = c('red', 'blue', 'green'))
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
legend(x = 'bottom', legend = c("A", "B", 'C'),
pch = 1:6, lty = 1:6, bty = "n", col = c('red', 'blue', 'green'),
ncol = 1, text.col = "blue", y.intersp = 2)
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1)
?legend
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend(title = 'qualquer coida',
cords='bottom') )
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend(title = 'qualquer coida',
coords="bottom") )
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend=c(title = 'qualquer coida',
coords="bottom") )
scatterplot( Length ~ Price | DriveTrain, data = Cars93,
xlab='x label', ylab='y label',
main='main label', las = 1,
legend=c(title = 'qualquer coisa',
coords="bottomright") )
#loading the file
iris_new <- read.csv(file="iris_new.data", header=F, sep=",")
setwd("~/")
#loading the file
iris_new <- read.csv(file="iris_new.data", header=F, sep=",")
setwd("C:/github/B9DA100-PD/Exam")
#loading the file
#setwd("C:/github/B9DA100-PD/Exam")
iris_new <- read.csv(file="iris_new.data", header=F, sep=",")
iris_new
#CHANGING HEADERS
header(iris_new)
#CHANGING HEADERS
heade(iris_new)
#CHANGING HEADERS
head(iris_new)
names(iris_new) <- c('Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width', 'Species')
#CHANGING HEADERS
head(iris_new)
#FINDING MEAN FIRST 5 ROWS...
iris_new[1:5,]
#FINDING MEAN FIRST 5 ROWS...
iris_new$Sepal.Length[1:5,]
#FINDING MEAN FIRST 5 ROWS...
iris_new$Sepal.Length[1:5]
mean(iris_new$Sepal.Length[1:5])
#REMOVING 'IRIS' FROM SPECIES AND CAPITALIZING LETTERS...
iris_new$Species
species_split <- strsplit(s, split='-', fixed=TRUE)
species_split <- strsplit(s, split='-', fixed=TRUE)
species_split <- strsplit(stringremove, split='-', fixed=TRUE)
stringremove <- 'Iris'
species_split <- strsplit(stringremove, split='-', fixed=TRUE)
species_split
species_split <- strsplit(iris_new, split='-', fixed=TRUE)
#REMOVING 'IRIS' FROM SPECIES AND CAPITALIZING LETTERS...
iris_new$Species
stringremove <- iris_new$Species
species_split <- strsplit(iris_new, split='-', fixed=TRUE)
species_split <- strsplit(stringremove, split='-', fixed=TRUE)
#REMOVING 'IRIS' FROM SPECIES AND CAPITALIZING LETTERS...
iris_new$Species
stringremove <- iris_new$Species
species_split <- strsplit(stringremove, split='-', fixed=TRUE)
species_split <- strsplit(iris_new$Species,'-')
stringremove <- iris_new$Species
stringremove
species_split <- strsplit(iris_new$Species,'-')
str(iris_new)
iris_new$Species = sub("Iris-", "", as.character(iris_new$Species))
iris_new$Species
simpleCap(iris_new$Species)
firstup(iris_new$Species)
toupper(iris_new$Species)
sapply(iris_new$Species, CapStr)
capitalize(iris_new$Species)
iris_new$Species
iris_new$Species.title()
iris_new$Species[1]
iris_new$Species.upper()
iris_new$Species.capwords()
iris_new$Species[0].upper()
iris_new$Species.capitalize()
capitalize('cazzo')
toupper(substring('cazzo', 1, 1))
toupper(substring(iris_new$Species, 1, 1))
iris_new$Species
iris_new['Species'] <-  iris_new['Species'].str.capitalize()
import Pandas as pd
import pandas as pd
#CREATE A NEW DATASET...
iris_sub <- subset(iris_new, Sepal.Length < 6.4 & Petal.Length > 5.1)
iris_sub
nrow(iris_sub)
#MEANS OF SEPAL.WIDTH
mean(iris_sub$Sepal.Width)
mean(iris_sub$Petal.Length)
#NUMBER OF ROWS
nrow(iris_sub)
#FINDING MEAN FIRST 5 ROWS...
mean(iris_new$Sepal.Length[1:5])
###QUESTION 4
library(ggplot2)
iris_file <- read.csv(file="iris_new.data", header=F, sep=",")
legend("bottomright", legend = c("Setosa", "Versicolor", "Virginica"),
pch = 16, col = c("maroon", "dodgerblue2", "gold"))
###QUESTION 4
library(ggplot2)
iris <- read.csv(file="iris_new.data", header=F, sep=",")
plot(iris$Sepal.Length, iris$Petal.Length,
col=c("maroon", "dodgerblue2", "gold")[iris$Species], pch = 16,
xlab = "Sepal Length", ylab = "Petal Length",
las = 1, main = "Sepal vs. Petal Length by Species")
plot(iris$Sepal.Length, iris$Petal.Length,
col=c("maroon", "dodgerblue2", "gold")[iris$Species], pch = 16,
xlab = "Sepal Length", ylab = "Petal Length",
las = 1, main = "Sepal vs. Petal Length by Species")
plot(iris$Sepal.Length, iris$Petal.Length)
plot(iris$Sepal.Length, iris$Petal.Length)
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
nrow(iris)
iris <- na.omit(iris)
nrow(iris)
nrow(iris)
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
iris$Sepal.Length
iris <- read.csv(file="iris_new.data", header=F, sep=",")
iris
names(iris_new) <- c('Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width', 'Species')
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
names(iris) <- c('Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width', 'Species')
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
plot(x=iris$Sepal.Length, y=iris$Sepal.Width,
xlab="Sepal Length", ylab="Sepal Width",  main="Sepal Length-Width")
bar1 <- ggplot(data=iris2, aes(x=Species, y=value, fill=variable))
bar1 + geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=c("orange", "blue", "darkgreen", "purple"),
name="Iris\nMeasurements",
breaks=c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
labels=c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width"))
bar1 <- ggplot(data=iris, aes(x=Species, y=value, fill=variable))
bar1 + geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=c("orange", "blue", "darkgreen", "purple"),
name="Iris\nMeasurements",
breaks=c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
labels=c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width"))
iris2 <- melt(iris, id.vars="Species")
histogram <- ggplot(data=iris, aes(x=Sepal.Width))
histogram + geom_histogram(binwidth=0.2, color="black", aes(fill=Species)) +
xlab("Sepal Width") +  ylab("Frequency") + ggtitle("Histogram of Sepal Width")
library(reshape2)
iris2 <- melt(iris, id.vars="Species")
iris2[1:3,]
bar1 <- ggplot(data=iris2, aes(x=Species, y=value, fill=variable))
bar1 + geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=c("orange", "blue", "darkgreen", "purple"),
name="Iris\nMeasurements",
breaks=c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
labels=c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width"))
iris_ex <- iris
iris_ex
iris_ex$Petal.Width <- NULL
iris2 <- melt(iris_ex, id.vars="Species")
bar1 <- ggplot(data=iris2, aes(x=Species, y=value, fill=variable))
bar1 + geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=c("orange", "blue", "darkgreen", "purple"),
name="Iris\nMeasurements",
breaks=c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
labels=c("Sepal Length", "Sepal Width", "Petal Length", "Petal Width"))
#CHANGING HEADERS
names(iris_new) <- c('Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width', 'Species')
#CHANGING HEADERS
iris_new <- read.csv(file="iris_new.data", header=F, sep=",")
names(iris_new) <- c('Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width', 'Species')
iris_sub <- subset(iris_new, Sepal.Length = 5.7 & Petal.Length = 4.1 & Species)
iris_sub <- subset(iris_new, Sepal.Length = 5.7 & Petal.Length = 4.1)
iris_sub <- subset(iris_new, Sepal.Length == 5.7 & Petal.Length == 4.1)
iris_sub
boxplot(iris_new)
boxplot(iris_new,  col = 2:4, las = 1, main = "Iris Data", xlab = "Iris")
boxplot(iris_new,  col = 2:4, las = 1, main = "Iris Data", xlab = "Species")
